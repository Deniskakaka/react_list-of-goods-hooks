{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","useState","isReverse","setReverse","sortType","setSortType","className","type","onClick","listGoods","reverse","copyList","sort","a","b","localeCompare","length","renderListGoods","map","el","ReactDOM","render","document","getElementById"],"mappings":"uOAIaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAgB,WAC3B,MAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAkBA,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAiC,UAAbF,EAAuB,WAAa,IACjEI,QAAS,kBAAMH,EAAY,UAH7B,iCAQA,wBACEE,KAAK,SACLD,UAAS,6BAAqC,WAAbF,EAAwB,WAAa,IACtEI,QAAS,kBAAMH,EAAY,WAH7B,4BAQA,wBACEE,KAAK,SACLD,UAAS,6BAAyBJ,EAAyB,GAAb,YAC9CM,QAAS,kBAAML,GAAYD,IAH7B,qBAQCA,GAAaE,EACZ,wBACEG,KAAK,SACLD,UAAU,4BACVE,QAAS,WACPH,EAAY,IACZF,GAAW,IALf,mBAUE,MAGN,6BAzDoB,SACtBM,EACAC,EACAH,GAEA,IAAMI,EAAQ,YAAOF,GAQrB,MANa,UAATF,EACFI,EAASC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MACtB,WAATP,GACTI,EAASC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEG,OAASF,EAAEE,UAGhCN,EAAUC,EAASD,UAAYC,EA6CjCM,CAAgBlB,EAAiBG,EAAWE,GAC1Cc,KAAI,SAACC,GACJ,OAAO,oBAAI,UAAQ,OAAZ,SAAoBA,aC9EvCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.7d3841f4.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App: React.FC = () => {\n  const [isReverse, setReverse] = useState(false);\n  const [sortType, setSortType] = useState('');\n\n  const renderListGoods = (\n    listGoods: string[],\n    reverse: boolean,\n    type: string,\n  ) => {\n    const copyList = [...listGoods];\n\n    if (type === 'alpha') {\n      copyList.sort((a, b) => a.localeCompare(b));\n    } else if (type === 'length') {\n      copyList.sort((a, b) => a.length - b.length);\n    }\n\n    return reverse ? copyList.reverse() : copyList;\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info ${sortType !== 'alpha' ? 'is-light' : ''}`}\n          onClick={() => setSortType('alpha')}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-success  ${sortType !== 'length' ? 'is-light' : ''}`}\n          onClick={() => setSortType('length')}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-warning  ${!isReverse ? 'is-light' : ''}`}\n          onClick={() => setReverse(!isReverse)}\n        >\n          Reverse\n        </button>\n\n        {isReverse || sortType ? (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setSortType('');\n              setReverse(false);\n            }}\n          >\n            Reset\n          </button>\n        ) : ''}\n      </div>\n\n      <ul>\n        {renderListGoods(goodsFromServer, isReverse, sortType)\n          .map((el: string) => {\n            return <li data-cy=\"Good\">{el }</li>;\n          })}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}